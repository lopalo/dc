#!/usr/bin/python

import sys
import os
import random
import plyvel
import json
from math import pi, cos, sin


ASTEROID_COUNT = 45
ASTEROID_SIZE = 70, 200
ASTEROID_DURABILITY = 1000, 30000
ASTEROID_ROTATION_SPEED = -15, 15
ASTEROID_FIELD_RADIUS = 300, 3500
ASTEROID_FIELD_POSITION = 100, 230
ASTEROID_TRAJECTORY_PROBABILITY = 0.3

GATE_POSITION = 100, 230
GATE_ROTATION_SPEED = -20
GATE_SIZE = 300

CP_POSITION = -2000, -100
CP_SIZE = 400
CP_DURABILITY = 430


def get_counter():
    c = [0]
    def counter():
        c[0] += 1
        return c[0]
    return counter


def create_gate(db, counter):
    ident = "gate:" + str(counter())
    pos = GATE_POSITION
    rotation = {'rotSpeed': GATE_ROTATION_SPEED,
                'tag': "EternalRotation"}
    data = {"id": ident,
            "name": "Gate",
            "pos": pos,
            "angle": random.randint(0, 360),
            "actions": [rotation],
            "size": [GATE_SIZE, GATE_SIZE]}
    db.put(ident, json.dumps(data))


def create_asteroids(db, counter):
    c_pos = ASTEROID_FIELD_POSITION
    for _ in xrange(ASTEROID_COUNT):
        ident = "asteroid:" + str(counter())
        len_ = random.uniform(*ASTEROID_FIELD_RADIUS)
        angle = random.uniform(-pi, pi)
        pos = (int(c_pos[0] + len_ * cos(angle)),
               int(c_pos[1] + len_ * sin(angle)))
        size = random.randint(*ASTEROID_SIZE)
        durability = random.randint(*ASTEROID_DURABILITY)

        rotation = {'rotSpeed': random.randint(*ASTEROID_ROTATION_SPEED),
                    'tag': "EternalRotation"}
        trajectory = {'center': pos,
                      'radius': max(ASTEROID_FIELD_RADIUS),
                      'rotSpeed': random.randint(*ASTEROID_ROTATION_SPEED),
                      'curAngle': random.randint(0, 360),
                      'tag': "MoveCircularTrajectory"}
        actions = []
        actions.append(rotation)
        if random.random() < ASTEROID_TRAJECTORY_PROBABILITY:
            actions.append(trajectory)
        data = {"id": ident,
                "name": "Asteroid",
                "pos": pos,
                "angle": random.randint(0, 360),
                "max-durability": durability,
                "durability": durability,
                "actions": actions,
                "size": [size, size]}
        db.put(ident, json.dumps(data))


def create_control_point(db, counter):
    ident = "cp:" + str(counter())
    pos = CP_POSITION
    actions = []
    data = {"id": ident,
            "name": "Control point",
            "pos": pos,
            "angle": random.randint(0, 360),
            "max-durability": CP_DURABILITY,
            "durability": CP_DURABILITY,
            "actions": actions,
            "size": [CP_SIZE, CP_SIZE],
            "owner": None}
    db.put(ident, json.dumps(data))



def main():
    db_dir = sys.argv[1]
    for area_db_name in sys.argv[2:]:
        path = os.path.join(db_dir, area_db_name)
        db = plyvel.DB(path, create_if_missing=True)
        counter = get_counter()
        with db.write_batch() as wb:
            create_gate(wb, counter)
            create_asteroids(wb, counter)
            create_control_point(wb, counter)
        db.close()



if __name__ == "__main__":
    main()

